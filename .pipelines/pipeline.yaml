pr:
  branches:
    include:
      - master
  paths:
    exclude:
    - ".devcontainer"
    - ".hooks"
    - ".vscode"
    - ".github"
    - docs

trigger:
  paths:
    exclude:
    - docs
    - "zapai/*"
    - "azure-ipam/*"
    - "dropgz/*"
  tags:
    include:
    - "*"

stages:
  - stage: setup
    displayName: ACN
    jobs:
      - job: env
        displayName: Setup
        pool:
          name: "$(BUILD_POOL_NAME_DEFAULT)"
        steps:
          - script: |
              BUILD_NUMBER=$(Build.BuildNumber)
              echo "##vso[task.setvariable variable=StorageID;isOutput=true]$(echo ${BUILD_NUMBER//./-})"
              echo "##vso[task.setvariable variable=Tag;isOutput=true]$(make version)"
              echo "##vso[task.setvariable variable=cniVersion;isOutput=true]$(make cni-version)"
              echo "##vso[task.setvariable variable=npmVersion;isOutput=true]$(make npm-version)"
              cat /etc/os-release
              uname -a
              sudo chown -R $(whoami):$(whoami) .
              go version
              go env
              which go
              echo $PATH
            name: "EnvironmentalVariables"
            displayName: "Set environmental variables"
            condition: always()

  - stage: containerize
    displayName: Build Images
    dependsOn:
      - setup
    jobs:
      - job: containerize_cni_windows_amd64
        timeoutInMinutes: 120
        displayName: Build Windows CNI Image
        variables:
          TAG: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.Tag'] ]
        pool:
          name: "$(BUILD_POOL_NAME_WINDOWS_AMD64)"
        steps:
          - template: containers/container-template-windows.yaml
            parameters:
              name: cni
              arch: amd64
              ai_path: tbd
              ai_path_var: TBD
              ai_id: tbd
              ai_id_var: TBD
              tag: $(TAG)

  - template: singletenancy/aks-custom-cni-windows/e2e-job-template.yaml
    parameters:
      name: "aks_custom_cni_windows"
      displayName: AKS Custom CNI Windows
      clusterName: "wincustomcni"

  - stage: cleanup
    displayName: Cleanup
    dependsOn:
      - "aks_custom_cni_windows"
    jobs:
      - job: delete_remote_artifacts
        displayName: Delete remote artifacts
        pool:
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands: agent.os -equals Linux
        steps:
          - checkout: none
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              inlineScript: |
                BUILD_NUMBER=$(Build.BuildNumber)
                BUILD_NUMBER=${BUILD_NUMBER//./-}
                echo Deleting storage container with name acn-$BUILD_NUMBER and account name $(STORAGE_ACCOUNT_NAME)
                az storage container delete -n acn-$BUILD_NUMBER --account-name $(STORAGE_ACCOUNT_NAME)
            displayName: Cleanup remote Azure storage container
